--- Turbine.lua.orig	2022-03-06 18:45:30.704749500 -0700
+++ Turbine.lua	2022-03-06 18:47:13.734749500 -0700
@@ -119,9 +119,9 @@
 Engine = {}
 
 ---Gets the current callstack.
----@param arguments (Unrecognized type) 
+---@vararg any
 ---@return string #The current callstack.
-Engine.GetCallStack = function (arguments) end
+Engine.GetCallStack = function (...) end
 
 ---Gets the current date.
 ---@return Object #Returns a table containing information about the current date. The following fields are available: Year, Month, Day, Hour, Minute, Second, DayOfWeek, DayOfYear, and IsDST.
@@ -425,7 +425,7 @@
 function Bank:GetChestCount() end
 
 ---Gets the name of a chest.
----@param chestType (Unrecognized type) 
+---@param chestType string
 ---@return string #The name of the specified chest.
 function Bank:GetChestName(chestType) end
 
@@ -435,7 +435,7 @@
 
 ---Gets and item from the player's bank.
 ---@param index number The index of the item to get.
----@return (Unrecognized type) #Either nil if there is no item there or the index is invalid, or the Item that is in the given index.
+---@return Item #Either nil if there is no item there or the index is invalid, or the Item that is in the given index.
 function Bank:GetItem(index) end
 
 ---Gets a flag indicating if the bank is currently available.
@@ -444,7 +444,7 @@
 
 ---Handles the dropping of items into a bank.
 ---@param shortcut Shortcut The shortcut information that was generated as part of a drag and drop event that should contain an item to perform an action on.
----@param targetChest (Unrecognized type) The target chest the drop should occur into.
+---@param targetChest any The target chest the drop should occur into.
 ---@param split boolean Flag indicating if the item split dialog should be displayed for the operation.
 function Bank:PerformShortcutDrop(shortcut, targetChest, split) end
 
@@ -1665,7 +1665,7 @@
 function PartyMember:GetParty() end
 
 ---Gets the raid the player is a member of.
----@return (Unrecognized type) #Returns the raid the player is a member of. If the player is not currently in a raid this will return nil.
+---@return Party #Returns the raid the player is a member of. If the player is not currently in a raid this will return nil.
 function PartyMember:GetRaid() end
 
 ---Gets the ready state of a player based on the result of a ready check.
@@ -2051,7 +2051,7 @@
 function SkillInfo:GetDescription() end
 
 ---Gets the image ID for the icon of the item.
----@return (Unrecognized type) #The ID for the skill icon.
+---@return number #The ID for the skill icon.
 function SkillInfo:GetIconImageID() end
 
 ---Gets the name of the item.
@@ -2166,7 +2166,7 @@
 function WalletItem:GetDescription() end
 
 ---Gets the image used to identity the wallet item.
----@return (Unrecognized type) #The image used to identity the wallet item.
+---@return any #The image used to identity the wallet item.
 function WalletItem:GetImage() end
 
 ---Gets the maximum quantity of this wallet item that a player can have.
@@ -2182,7 +2182,7 @@
 function WalletItem:GetQuantity() end
 
 ---Gets the small image used to identity the wallet item.
----@return (Unrecognized type) #The small image used to identity the wallet item.
+---@return any #The small image used to identity the wallet item.
 function WalletItem:GetSmallImage() end
 
 ---Gets a flag indicating if the item is shared across all characters of an account.
@@ -3171,8 +3171,8 @@
 ---`Graphic(dataId)` : Constructs a graphic from a game asset by its ID.
 ---`Graphic(filename)` : Constructs a graphic from a file.
 ---@overload fun():Graphic
----@overload fun(dataId:(Unrecognized type)):Graphic
----@param dataId (Unrecognized type) 
+---@overload fun(dataId:number):Graphic
+---@param dataId number Game asset ID
 ---@param filename string 
 ---@return Graphic
 Turbine.UI.Graphic = function (filename) end
@@ -3182,8 +3182,8 @@
 ---`Graphic(dataId)` : Constructs a graphic from a game asset by its ID.
 ---`Graphic(filename)` : Constructs a graphic from a file.
 ---@overload fun():Graphic
----@overload fun(dataId:(Unrecognized type)):Graphic
----@param dataId (Unrecognized type) 
+---@overload fun(dataId:number):Graphic
+---@param dataId number
 ---@param filename string 
 ---@return Graphic
 function Graphic:Constructor(filename) end
